package pages

import (
	"github.com/lulzshadowwalker/quasso-scraper/ui/components/button"
	"github.com/lulzshadowwalker/quasso-scraper/ui/components/card"
	"github.com/lulzshadowwalker/quasso-scraper/ui/components/code"
	"github.com/lulzshadowwalker/quasso-scraper/ui/components/icon"
	"github.com/lulzshadowwalker/quasso-scraper/ui/components/input"
	"github.com/lulzshadowwalker/quasso-scraper/ui/components/label"
	"github.com/lulzshadowwalker/quasso-scraper/ui/components/switch"
	"github.com/lulzshadowwalker/quasso-scraper/ui/components/table"
	"github.com/lulzshadowwalker/quasso-scraper/ui/layouts"
)

templ Landing() {
	@layouts.BaseLayout() {
		<div class="h-full container mx-auto px-4 my-8 space-y-6">
			@Section(SectionProps{
				Title:       "Menu Scraper Tool",
				Description: "Enter a restaurant menu URL to extract its data.",
			}) {
				@card.Card() {
					@card.Header() {
						@card.Title() {
							Scrape Restaurant Menu
						}
						@card.Description() {
							Input a valid restaurant menu URL to begin the scraping process.
						}
					}
					@card.Content() {
						<form id="js-form" class="flex items-center gap-4">
							@input.Input(input.Props{
								Type:        "text",
								Placeholder: "Enter Restaurant Menu URL",
								ID:          "js-input",
								Class:       "w-full",
							})
							@button.Button(button.Props{
								Type: button.TypeSubmit,
							}) {
								@icon.Search()
								Scrape
							}
						</form>
					}
					@card.Footer() {
						<div class="flex items-center gap-4">
							@switchcomp.Switch(switchcomp.Props{
								ID:      "js-table-preview",
								Checked: true,
							})
							@label.Label(label.Props{
								For: "js-table-preview",
							}) {
								Table Preview
							}
							@switchcomp.Switch(switchcomp.Props{
								ID:      "js-html-preview",
								Checked: true,
							})
							@label.Label(label.Props{
								For: "js-html-preview",
							}) {
								HTML Preview
							}
							@switchcomp.Switch(switchcomp.Props{
								ID:      "js-json-preview",
								Checked: true,
							})
							@label.Label(label.Props{
								For: "js-json-preview",
							}) {
								JSON Preview
							}
						</div>
					}
				}
			}
			@Section(SectionProps{
				ID:          "js-table-preview-container",
				Title:       "Extracted Menu Items",
				Description: "Below is a table displaying the extracted menu items from the provided URL.",
			}) {
				@Table()
			}
			@Section(SectionProps{
				ID:          "js-html-preview-container",
				Title:       "HTML Preview",
				Description: "Here is a preview of the extracted menu data in HTML format.",
			}) {
				<div>
					@code.Code(code.Props{
						ID:             "js-html-code",
						Language:       "html",
						ShowCopyButton: true,
					}) {
						{ `<div>hello, sailor!</div>` }
					}
				</div>
			}
			@Section(SectionProps{
				ID:          "js-json-preview-container",
				Title:       "JSON Preview",
				Description: "Here is a preview of the extracted menu data in JSON format.",
			}) {
				<div>
					@code.Code(code.Props{
						ID:             "js-json-code",
						Language:       "json",
						ShowCopyButton: true,
					}) {
						{ `{
    "hello": "sailor!"
    }` }
					}
				</div>
			}
			@Section(SectionProps{
				Title: "Download Menu Data",
				Description: `You can download zip file containing the extracted menu data in JSON format along with assets like
  images, favicons, logos and more.`,
			}) {
				<div class="flex items-center gap-4">
					@button.Button() {
						@icon.Download()
						Download Zip
					}
				</div>
			}
		</div>
	}
}

type SectionProps struct {
	ID          string
	Title       string
	Description string
}

templ Section(props ...SectionProps) {
	{{ var p SectionProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	<section class="mb-8" id={ p.ID }>
		<div class="mb-4">
			<h2 class="text-3xl font-semibold mb-1">{ p.Title }</h2>
			if p.Description != "" {
				<p class="text-neutral-400 tracking-wide">{ p.Description }</p>
			}
		</div>
		{ children... }
	</section>
}

templ Table() {
	@card.Card() {
		@card.Content(card.ContentProps{
			Class: "p-0",
		}) {
			@table.Table(table.Props{
				ID: "js-table",
			}) {
				@table.Header() {
					@table.Row() {
						@table.Head() {
							Item
						}
						@table.Head() {
							Category
						}
						@table.Head() {
							Price
						}
						@table.Head() {
							Rating
						}
						@table.Head() {
							Options
						}
					}
				}
				@table.Body() {
					@table.Row() {
						@table.Cell() {
							<div class="flex items-center gap-3">
								<div class="w-10 h-10 bg-gray-200 rounded"></div>
								<div>
									<div class="font-medium">No items yet</div>
									<div class="text-sm text-gray-500">Scrape a menu to see items here</div>
								</div>
							</div>
						}
						@table.Cell() {
							-
						}
						@table.Cell() {
							-
						}
						@table.Cell() {
							-
						}
						@table.Cell() {
							-
						}
					}
				}
				@table.Footer() {
					@table.Row() {
						@table.Head() {
							0 items
						}
						@table.Head() {
						}
						@table.Head() {
						}
						@table.Head() {
						}
						@table.Head() {
						}
					}
				}
			}
		}
	}
}
